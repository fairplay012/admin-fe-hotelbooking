{"version":3,"sources":["views/pages/account/tabs/Profile.tsx","views/pages/account/tabs/ChangePassword.tsx","views/pages/account/tabs/SettingsPage.tsx","views/pages/account/index.tsx"],"names":["Profile","theme","useTheme","React","useState","open","setOpen","user","useAuth","handleClose","Grid","container","justifyContent","spacing","sx","minHeight","item","xs","lg","MainCard","CardHeader","avatar","Avatar","src","User","typography","largeAvatar","cursor","color","title","name","subheader","type","borderBottom","borderColor","palette","mode","background","default","primary","boxShadow","CardContent","List","ListItemButton","ListItemIcon","ListItemText","Typography","variant","ListItemSecondaryAction","username","Divider","email","phone","action","Button","onClick","TableContainer","component","Card","Table","TableBody","TableRow","TableCell","dob","gender","Dialog","fullWidth","maxWidth","onClose","DialogTitle","DialogContent","DialogContentText","TextField","margin","id","label","value","DialogActions","validationSchema","Yup","required","Alert","forwardRef","props","ref","elevation","ChangePassword","showPassword","setShowPassword","event","reason","formik","useFormik","initialValues","oldPassword","newPassword","retypePassword","onSubmit","values","Paper","noValidate","handleSubmit","rowSpacing","columnSpacing","gridSpacing","mt","FormControl","error","Boolean","touched","errors","InputLabel","htmlFor","OutlinedInput","onChange","handleChange","inputProps","FormHelperText","endAdornment","InputAdornment","position","IconButton","onMouseDown","preventDefault","edge","size","direction","alignItems","resetForm","e","Snackbar","autoHideDuration","severity","width","SettingPage","desktop","attempted","state","setState","FacebookURL","setFacebookURL","LinkedInURL","setLinkedInURL","TwitterURL","setTwitterURL","target","checked","FormGroup","FormControlLabel","control","Switch","alignContent","Stack","fontSize","console","log","LabTabs","setValue","TabContext","Box","TabList","newValue","Tab","TabPanel"],"mappings":"8lBAyCe,SAASA,IACtB,IAAMC,EAAQC,cACd,EAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACQC,EAASC,cAATD,KAMFE,EAAc,WAClBH,GAAQ,IAOV,OACE,cAAC,IAAD,UACE,eAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,QAAS,EAAGC,GAAI,CAAEC,UAAW,SAArE,UACE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACEC,OACE,cAACC,EAAA,EAAD,CACEC,IAAKC,IACLV,GAAE,2BACGb,EAAMwB,WAAWC,aADpB,IAEAC,OAAQ,YAEV,gBAAc,OACdC,MAAM,YAGVC,MAAK,OAAEtB,QAAF,IAAEA,OAAF,EAAEA,EAAMuB,KACbC,UAA0B,KAAX,OAAJxB,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,MAAa,QAAU,OACxClB,GAAI,CACFmB,aAAc,YACdC,YAAoC,SAAvBjC,EAAMkC,QAAQC,KAAkBnC,EAAMkC,QAAQE,WAAWC,QAAUrC,EAAMkC,QAAQI,QAAQ,KAAO,GAC7G,SAAU,CACRC,UAAkC,SAAvBvC,EAAMkC,QAAQC,KAAkB,qCAAuC,sCAIxF,cAACK,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,wBAEF,cAACC,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,iBAAavC,QAAb,IAAaA,OAAb,EAAaA,EAAM0C,gBAGvB,cAACC,EAAA,EAAD,IACA,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,qBAEF,cAACC,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,iBAAavC,QAAb,IAAaA,OAAb,EAAaA,EAAM4C,aAGvB,cAACD,EAAA,EAAD,IACA,eAACP,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,4BAEF,cAACC,EAAA,EAAD,UACE,cAACF,EAAA,EAAD,iBAAavC,QAAb,IAAaA,OAAb,EAAaA,EAAM6C,uBAO/B,cAAC1C,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACES,MAAM,oBACNwB,OACE,cAACC,EAAA,EAAD,CAAQC,QArFE,WACtBjD,GAAQ,IAoFI,SACE,cAAC,IAAD,MAGJQ,GAAI,CACFmB,aAAc,YACdC,YAAoC,SAAvBjC,EAAMkC,QAAQC,KAAkBnC,EAAMkC,QAAQE,WAAWC,QAAUrC,EAAMkC,QAAQI,QAAQ,KAAO,GAC7G,SAAU,CACRC,UAAkC,SAAvBvC,EAAMkC,QAAQC,KAAkB,qCAAuC,sCAIxF,cAACK,EAAA,EAAD,UACE,cAACe,EAAA,EAAD,CAAgBC,UAAWC,IAA3B,SACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWf,QAAQ,OAAnB,uBACA,cAACe,EAAA,EAAD,CAAWf,QAAQ,OAAnB,gBAA2BxC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMuB,UAEnC,eAAC+B,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWf,QAAQ,OAAnB,mBACA,cAACe,EAAA,EAAD,CAAWf,QAAQ,OAAnB,gBAA2BxC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAM6C,WAEnC,eAACS,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWf,QAAQ,OAAnB,2BACA,cAACe,EAAA,EAAD,CAAWf,QAAQ,OAAnB,gBAA2BxC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMwD,SAEnC,eAACF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWf,QAAQ,OAAnB,oBACA,cAACe,EAAA,EAAD,CAAWf,QAAQ,OAAnB,gBAA2BxC,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAMyD,YAEnC,eAACH,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWf,QAAQ,OAAnB,sBACA,cAACe,EAAA,EAAD,CAAWf,QAAQ,OAAnB,SAA0C,KAAX,OAAJxC,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,MAAa,QAAU,qBAMlE,eAACiC,EAAA,EAAD,CAAQC,WAAS,EAACC,SAAS,KAAK9D,KAAMA,EAAM+D,QAAS3D,EAArD,UACE,cAAC4D,EAAA,EAAD,mCACA,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,oDACA,cAACC,EAAA,EAAD,CAAWC,OAAO,QAAQC,GAAG,OAAOC,MAAM,OAAOC,MAAK,OAAErE,QAAF,IAAEA,OAAF,EAAEA,EAAMuB,KAAMoC,WAAS,EAACnB,QAAQ,aACtF,cAACyB,EAAA,EAAD,CAAWC,OAAO,QAAQC,GAAG,QAAQC,MAAM,eAAeC,MAAK,OAAErE,QAAF,IAAEA,OAAF,EAAEA,EAAM6C,MAAOc,WAAS,EAACnB,QAAQ,aAChG,cAACyB,EAAA,EAAD,CAAWC,OAAO,QAAQC,GAAG,MAAMC,MAAM,gBAAgBC,MAAK,OAAErE,QAAF,IAAEA,OAAF,EAAEA,EAAMwD,IAAKG,WAAS,EAACnB,QAAQ,aAC7F,cAACyB,EAAA,EAAD,CAAWC,OAAO,QAAQC,GAAG,SAASC,MAAM,SAASC,MAAK,OAAErE,QAAF,IAAEA,OAAF,EAAEA,EAAMyD,OAAQE,WAAS,EAACnB,QAAQ,gBAE9F,eAAC8B,EAAA,EAAD,WACE,cAACvB,EAAA,EAAD,CAAQC,QAAS9C,EAAjB,kBACA,cAAC6C,EAAA,EAAD,CAAQC,QAAS9C,EAAjB,oC,2KC5JVqE,GAAmBC,KAAW,CAClCjD,KAAMiD,OAAaC,SAAS,sBAGxBC,GAAQ9E,IAAM+E,YAAuC,SAACC,EAAOC,GAAR,OACzD,cAAC,KAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKrC,QAAQ,UAAaoC,OAG1C,SAASG,KACtB,IAAMrF,EAAQC,eACd,EAAwCC,IAAMC,UAAS,GAAvD,mBAAOmF,EAAP,KAAqBC,EAArB,KACA,EAAwBrF,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KAYMG,EAAc,SAACgF,EAAsCC,GAC1C,cAAXA,GAIJpF,GAAQ,IAOJqF,EAASC,aAAU,CACvBC,cAAe,CACbC,YAAa,GACbC,YAAa,GACbC,eAAgB,GAChBT,cAAc,GAEhBT,oBACAmB,SAAU,SAACC,OAEb,OACE,cAACC,EAAA,EAAD,UACE,eAAChF,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACES,MAAM,kBACNf,GAAI,CACFmB,aAAc,YACdC,YAAoC,SAAvBjC,EAAMkC,QAAQC,KAAkBnC,EAAMkC,QAAQE,WAAWC,QAAUrC,EAAMkC,QAAQI,QAAQ,KAAO,GAC7G,SAAU,CACRC,UAAkC,SAAvBvC,EAAMkC,QAAQC,KAAkB,qCAAuC,sCAIxF,uBAAMgE,YAAU,EAACH,SAAUN,EAAOU,aAAlC,UAEE,eAAC3F,EAAA,EAAD,CAAMC,WAAS,EAAC2F,WAAY,EAAGC,cAAeC,KAAa1F,GAAI,CAAE2F,GAAI,KAArE,UACE,cAAC/F,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,eAACyF,EAAA,EAAD,CAAaxC,WAAS,EAACyC,MAAOC,QAAQjB,EAAOkB,QAAQf,aAAeH,EAAOmB,OAAOhB,aAAlF,UACE,cAACiB,EAAA,EAAD,CAAYC,QAAQ,8BAApB,0BACA,cAACC,GAAA,EAAD,CACEvC,GAAG,8BACHE,MAAOe,EAAOO,OAAOJ,YACrB9D,KAAM2D,EAAOO,OAAOX,aAAe,OAAS,WAC5CzD,KAAK,cACLoF,SAAUvB,EAAOwB,aACjBxC,MAAM,cACNyC,WAAY,KAEbzB,EAAOkB,QAAQf,aAAeH,EAAOmB,OAAOhB,aAC3C,cAACuB,GAAA,EAAD,CAAgBV,OAAK,EAACjC,GAAG,6CAAzB,SACGiB,EAAOmB,OAAOhB,mBA8BvB,cAACpF,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACf,cAACP,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,eAACyF,EAAA,EAAD,CAAaxC,WAAS,EAACyC,MAAOC,QAAQjB,EAAOkB,QAAQd,aAAeJ,EAAOmB,OAAOf,aAAlF,UACE,cAACgB,EAAA,EAAD,CAAYC,QAAQ,8BAApB,0BACA,cAACC,GAAA,EAAD,CACEvC,GAAG,8BACHE,MAAOe,EAAOO,OAAOH,YACrB/D,KAAM2D,EAAOO,OAAOX,aAAe,OAAS,WAC5CzD,KAAK,cACLoF,SAAUvB,EAAOwB,aACjBxC,MAAM,cACNyC,WAAY,KAEbzB,EAAOkB,QAAQd,aAAeJ,EAAOmB,OAAOf,aAC3C,cAACsB,GAAA,EAAD,CAAgBV,OAAK,EAACjC,GAAG,6CAAzB,SACGiB,EAAOmB,OAAOf,mBAKvB,cAACrF,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,EAAf,SACE,eAACyF,EAAA,EAAD,CAAaxC,WAAS,EAACyC,MAAOC,QAAQjB,EAAOkB,QAAQb,gBAAkBL,EAAOmB,OAAOd,gBAArF,UACE,cAACe,EAAA,EAAD,CAAYC,QAAQ,8BAApB,iCACA,cAACC,GAAA,EAAD,CACEvC,GAAG,8BACHE,MAAOe,EAAOO,OAAOF,eACrBhE,KAAM2D,EAAOO,OAAOX,aAAe,OAAS,WAC5CzD,KAAK,iBACLoF,SAAUvB,EAAOwB,aACjBG,aACE,cAACC,GAAA,EAAD,CAAgBC,SAAS,MAAzB,SACE,cAACC,GAAA,EAAD,CACE,aAAW,6BACXlE,QA7HU,WAC9BiC,GAAiBD,IA6HGmC,YA5GU,SAACjC,GAC/BA,EAAMkC,kBA4GcC,KAAK,MACLC,KAAK,QALP,SAOGtC,EAAe,cAAC,KAAD,IAAiB,cAAC,KAAD,QAIvCZ,MAAM,iBACNyC,WAAY,KAEbzB,EAAOkB,QAAQb,gBAAkBL,EAAOmB,OAAOd,gBAC9C,cAACqB,GAAA,EAAD,CAAgBV,OAAK,EAACjC,GAAG,6CAAzB,SACGiB,EAAOmB,OAAOd,yBAMzB,eAACtF,EAAA,EAAD,CAAMC,WAAS,EAACmH,UAAU,MAAMC,WAAW,WAAWnH,eAAe,WAAWC,QAAS2F,KAAa1F,GAAI,CAAE2F,GAAI,GAAhH,UACE,cAAC/F,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACsC,EAAA,EAAD,CAAQuE,KAAK,QAAQ7F,KAAK,SAASe,QAAQ,YAAYnB,MAAM,UAAU2B,QA/I/D,WAElBjD,GAAQ,GACRqF,EAAOqC,aA4IG,+BAIF,cAACtH,EAAA,EAAD,CAAMM,MAAI,EAAV,SACE,cAACsC,EAAA,EAAD,CAAQuE,KAAK,QAAQ7F,KAAK,QAAQe,QAAQ,WAAWnB,MAAM,QAAQ2B,QAAS,SAAC0E,GAAD,OAAOtC,EAAOqC,aAA1F,qBAIF,cAACE,GAAA,EAAD,CAAU7H,KAAMA,EAAM8H,iBAAkB,IAAM/D,QAAS3D,EAAvD,SACE,cAAC,GAAD,CAAO2D,QAAS3D,EAAa2H,SAAS,UAAUtH,GAAI,CAAEuH,MAAO,QAA7D,wD,mHCzKRpD,GAAQ9E,IAAM+E,YAAuC,SAACC,EAAOC,GAAR,OACzD,cAAC,KAAD,aAAUC,UAAW,EAAGD,IAAKA,EAAKrC,QAAQ,UAAaoC,OAG1C,SAASmD,KACtB,IAAMrI,EAAQC,cACd,EAAwBC,IAAMC,UAAS,GAAvC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BH,IAAMC,SAAS,CACvC+C,OAAO,EACPoF,SAAS,EACTC,WAAW,IAHb,mBAAOC,EAAP,KAAcC,EAAd,KAKA,EAAsCvI,IAAMC,SAAS,IAArD,mBAAOuI,EAAP,KAAoBC,EAApB,KACA,EAAsCzI,IAAMC,SAAS,IAArD,mBAAOyI,EAAP,KAAoBC,EAApB,KACA,EAAoC3I,IAAMC,SAAS,IAAnD,mBAAO2I,EAAP,KAAmBC,EAAnB,KAEM7B,EAAe,SAAC1B,GACpBiD,EAAS,2BACJD,GADG,mBAELhD,EAAMwD,OAAOnH,KAAO2D,EAAMwD,OAAOC,YAIhCzI,EAAc,SAACgF,EAAsCC,GAC1C,cAAXA,GAIJpF,GAAQ,IA2BV,OACE,cAAC6F,EAAA,EAAD,UACE,eAACzF,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,QAAS2F,KAAjD,UACE,cAAC9F,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACES,MAAM,gBACNE,UAAU,8CACVjB,GAAI,CACFmB,aAAc,YACdC,YAAoC,SAAvBjC,EAAMkC,QAAQC,KAAkBnC,EAAMkC,QAAQE,WAAWC,QAAUrC,EAAMkC,QAAQI,QAAQ,KAAO,GAC7G,SAAU,CACRC,UAAkC,SAAvBvC,EAAMkC,QAAQC,KAAkB,qCAAuC,sCAIxF,eAACK,EAAA,EAAD,WACE,eAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,QAAS,EAAjD,UACE,cAACH,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAApB,wCAEF,cAACrC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiI,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CAAQJ,QAAST,EAAMtF,MAAO+D,SAAUC,EAAcrF,KAAK,QAAQsF,WAAY,CAAE,aAAc,gBAEjGzC,MAAM,YAKd,cAACzB,EAAA,EAAD,IACA,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,QAAS,EAAGC,GAAI,CAAE2F,GAAI,KAA9D,UACE,cAAC/F,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAApB,6CAEF,cAACrC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiI,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEJ,QAAST,EAAMF,QACfrB,SAAUC,EACVrF,KAAK,UACLsF,WAAY,CAAE,aAAc,gBAGhCzC,MAAM,uCAKd,cAACzB,EAAA,EAAD,IACA,eAACxC,EAAA,EAAD,CAAMC,WAAS,EAACC,eAAe,SAASC,QAAS,EAAGC,GAAI,CAAE2F,GAAI,KAA9D,UACE,cAAC/F,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC4B,EAAA,EAAD,CAAYC,QAAQ,KAApB,4DAEF,cAACrC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAACiI,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEJ,QAAST,EAAMD,UACftB,SAAUC,EACVrF,KAAK,YACLsF,WAAY,CAAE,aAAc,gBAGhCzC,MAAM,oBAQpB,cAACjE,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,eAACE,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CACES,MAAM,kBACNE,UAAU,aACVjB,GAAI,CACFmB,aAAc,YACdC,YAAoC,SAAvBjC,EAAMkC,QAAQC,KAAkBnC,EAAMkC,QAAQE,WAAWC,QAAUrC,EAAMkC,QAAQI,QAAQ,KAAO,GAC7G,SAAU,CACRC,UAAkC,SAAvBvC,EAAMkC,QAAQC,KAAkB,qCAAuC,sCAIxF,cAACK,EAAA,EAAD,UACE,eAAC/B,EAAA,EAAD,CACEC,WAAS,EACTmH,UAAU,MACVlH,eAAe,SACf2I,aAAa,SACbxB,WAAW,SACXlH,QAAS,EACTC,GAAI,CAAE2F,GAAI,KAPZ,UASE,cAAC/F,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,eAACuI,GAAA,EAAD,CAAO1B,UAAU,MAAMjH,QAAS,EAAhC,UACE,cAAC,KAAD,CAAc4I,SAAS,UACvB,cAACjF,EAAA,EAAD,CACEC,OAAO,QACPC,GAAG,cACHC,MAAM,uBACNC,MAAO+D,EACPzB,SApIY,SAACzB,GAC/BmD,EAAenD,EAAMwD,OAAOrE,QAoIVV,WAAS,EACTnB,QAAQ,aAEV,cAACO,EAAA,EAAD,CAAQP,QAAQ,YAAYnB,MAAM,UAAU2B,QArIhC,WAC5BmG,QAAQC,IAAIhB,GACZrI,GAAQ,IAmIQ,0BAKJ,cAAC4C,EAAA,EAAD,IACA,cAACxC,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,eAACuI,GAAA,EAAD,CAAO1B,UAAU,MAAMjH,QAAS,EAAhC,UACE,cAAC,KAAD,CAAc4I,SAAS,UACvB,cAACjF,EAAA,EAAD,CACEC,OAAO,QACPC,GAAG,cACHC,MAAM,uBACNC,MAAOiE,EACP3B,SA9IY,SAACzB,GAC/BqD,EAAerD,EAAMwD,OAAOrE,QA8IVV,WAAS,EACTnB,QAAQ,aAEV,cAACO,EAAA,EAAD,CAAQP,QAAQ,YAAYnB,MAAM,UAAU2B,QA/IhC,WAC5BmG,QAAQC,IAAId,GACZvI,GAAQ,IA6IQ,0BAKJ,eAACI,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,UACE,eAACuI,GAAA,EAAD,CAAO1B,UAAU,MAAMjH,QAAS,EAAhC,UACE,cAAC,KAAD,CAAa4I,SAAS,UACtB,cAACjF,EAAA,EAAD,CACEC,OAAO,QACPC,GAAG,aACHC,MAAM,sBACNC,MAAOmE,EACP7B,SAvJW,SAACzB,GAC9BuD,EAAcvD,EAAMwD,OAAOrE,QAuJTV,WAAS,EACTnB,QAAQ,aAEV,cAACO,EAAA,EAAD,CAAQP,QAAQ,YAAYnB,MAAM,UAAU2B,QAxJjC,WAC3BmG,QAAQC,IAAIZ,GACZzI,GAAQ,IAsJQ,wBAIF,cAAC4H,GAAA,EAAD,CAAU7H,KAAMA,EAAM8H,iBAAkB,IAAM/D,QAAS3D,EAAvD,SACE,cAAC,GAAD,CAAO2D,QAAS3D,EAAa2H,SAAS,UAAUtH,GAAI,CAAEuH,MAAO,QAA7D,+DC/NL,SAASuB,KACtB,MAA0BzJ,WAAe,KAAzC,mBAAOyE,EAAP,KAAciF,EAAd,KAMA,OACE,cAAC1D,EAAA,EAAD,CAAOd,UAAW,EAAlB,SACE,cAAC5C,EAAA,EAAD,UACE,cAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAGC,GAAI,CAAEC,UAAW,SAA7C,SACE,cAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAf,SACE,eAAC6I,EAAA,EAAD,CAAYlF,MAAOA,EAAnB,UACE,cAACmF,EAAA,EAAD,CAAKjJ,GAAI,CAAEmB,aAAc,EAAGC,YAAa,WAAzC,SACE,eAAC8H,EAAA,EAAD,CAAS9C,SAXF,SAACzB,EAA6BwE,GACjDJ,EAASI,IAUoC,aAAW,uBAA5C,UACE,cAACC,EAAA,EAAD,CAAKvF,MAAM,UAAUC,MAAM,MAC3B,cAACsF,EAAA,EAAD,CAAKvF,MAAM,kBAAkBC,MAAM,MACnC,cAACsF,EAAA,EAAD,CAAKvF,MAAM,UAAUC,MAAM,WAG/B,eAACuF,EAAA,EAAD,CAAUvF,MAAM,IAAhB,UACG,IACD,cAAC5E,EAAD,IAAY,OAEd,eAACmK,EAAA,EAAD,CAAUvF,MAAM,IAAhB,UACG,IACD,cAACU,GAAD,IAAmB,OAErB,eAAC6E,EAAA,EAAD,CAAUvF,MAAM,IAAhB,UACG,IACD,cAAC0D,GAAD,IAAgB","file":"static/js/14.6a2abd0f.chunk.js","sourcesContent":["// THIRD-PARTY\r\nimport React from 'react';\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Divider,\r\n  Grid,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  ListItemText,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n  TextField,\r\n  Typography\r\n} from '@mui/material';\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport { Box } from '@mui/system';\r\nimport { useTheme } from '@mui/material/styles';\r\n\r\n// PROJECT IMPORTS\r\nimport useAuth from '../../../../hooks/useAuth';\r\n// import { getProfile } from '../../../../store/slices/profile';\r\nimport User from 'assets/images/users/user-round.svg';\r\nimport MainCard from 'ui-component/cards/MainCard';\r\n\r\nexport default function Profile() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const { user } = useAuth();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  // const onGetProfile = () => {\r\n  //   getProfile();\r\n  // };\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container justifyContent=\"center\" spacing={2} sx={{ minHeight: '100vh' }}>\r\n        <Grid item xs={12} lg={4}>\r\n          <MainCard>\r\n            <CardHeader\r\n              avatar={\r\n                <Avatar\r\n                  src={User}\r\n                  sx={{\r\n                    ...theme.typography.largeAvatar,\r\n                    cursor: 'pointer'\r\n                  }}\r\n                  aria-haspopup=\"true\"\r\n                  color=\"inherit\"\r\n                />\r\n              }\r\n              title={user?.name}\r\n              subheader={user?.type === 1 ? 'Admin' : 'User'}\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <List>\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    <PersonIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h5\">Username</Typography>\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <Typography>{user?.username}</Typography>\r\n                  </ListItemSecondaryAction>\r\n                </ListItemButton>\r\n                <Divider />\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    <EmailIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h5\">Email</Typography>\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <Typography>{user?.email}</Typography>\r\n                  </ListItemSecondaryAction>\r\n                </ListItemButton>\r\n                <Divider />\r\n                <ListItemButton>\r\n                  <ListItemIcon>\r\n                    <PhoneIphoneIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText>\r\n                    <Typography variant=\"h5\">Phone Number</Typography>\r\n                  </ListItemText>\r\n                  <ListItemSecondaryAction>\r\n                    <Typography>{user?.phone}</Typography>\r\n                  </ListItemSecondaryAction>\r\n                </ListItemButton>\r\n              </List>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12} lg={8}>\r\n          <MainCard>\r\n            <CardHeader\r\n              title=\"Persional Details\"\r\n              action={\r\n                <Button onClick={handleClickOpen}>\r\n                  <EditIcon />\r\n                </Button>\r\n              }\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <TableContainer component={Card}>\r\n                <Table>\r\n                  <TableBody>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Full Name</TableCell>\r\n                      <TableCell variant=\"body\">{user?.name}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Phone</TableCell>\r\n                      <TableCell variant=\"body\">{user?.phone}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Date Of Birth</TableCell>\r\n                      <TableCell variant=\"body\">{user?.dob}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Gender</TableCell>\r\n                      <TableCell variant=\"body\">{user?.gender}</TableCell>\r\n                    </TableRow>\r\n                    <TableRow>\r\n                      <TableCell variant=\"head\">Position</TableCell>\r\n                      <TableCell variant=\"body\">{user?.type === 1 ? 'Admin' : 'User'}</TableCell>\r\n                    </TableRow>\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </CardContent>\r\n            <Dialog fullWidth maxWidth=\"sm\" open={open} onClose={handleClose}>\r\n              <DialogTitle>Personal Information</DialogTitle>\r\n              <DialogContent>\r\n                <DialogContentText>Change your personal Information here</DialogContentText>\r\n                <TextField margin=\"dense\" id=\"name\" label=\"Name\" value={user?.name} fullWidth variant=\"standard\" />\r\n                <TextField margin=\"dense\" id=\"phone\" label=\"Phone Number\" value={user?.phone} fullWidth variant=\"standard\" />\r\n                <TextField margin=\"dense\" id=\"dob\" label=\"Date of Birth\" value={user?.dob} fullWidth variant=\"standard\" />\r\n                <TextField margin=\"dense\" id=\"gender\" label=\"Gender\" value={user?.gender} fullWidth variant=\"standard\" />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                <Button onClick={handleClose}>Edit</Button>\r\n                <Button onClick={handleClose}>Cancel</Button>\r\n              </DialogActions>\r\n            </Dialog>\r\n          </MainCard>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n","// THIRD-PARTY\r\nimport React from 'react';\r\nimport {\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  IconButton,\r\n  Paper,\r\n  CardHeader,\r\n  Snackbar\r\n} from '@mui/material';\r\nimport { useTheme } from '@mui/system';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\n\r\n// PROJECT IMPORTS\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst validationSchema = Yup.object({\r\n  name: Yup.string().required('Name is required')\r\n});\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\r\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n));\r\n\r\nexport default function ChangePassword() {\r\n  const theme = useTheme();\r\n  const [showPassword, setShowPassword] = React.useState(false);\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickShowPassword = () => {\r\n    setShowPassword(!showPassword);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    // If Input not empty then alert success, else set error\r\n    setOpen(true);\r\n    formik.resetForm();\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMouseDownPassword = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      oldPassword: '',\r\n      newPassword: '',\r\n      retypePassword: '',\r\n      showPassword: false\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {}\r\n  });\r\n  return (\r\n    <Paper>\r\n      <MainCard>\r\n        <CardHeader\r\n          title=\"Change Password\"\r\n          sx={{\r\n            borderBottom: '1px solid',\r\n            borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n            ':hover': {\r\n              boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n            }\r\n          }}\r\n        />\r\n        <form noValidate onSubmit={formik.handleSubmit}>\r\n          {/* <Grid container justifyContent=\"center\" spacing={2} sx={{ minHeight: '100vh' }}> */}\r\n          <Grid container rowSpacing={2} columnSpacing={gridSpacing} sx={{ mt: 0.25 }}>\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth error={Boolean(formik.touched.oldPassword && formik.errors.oldPassword)}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Old Password</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  value={formik.values.oldPassword}\r\n                  type={formik.values.showPassword ? 'text' : 'password'}\r\n                  name=\"oldPassword\"\r\n                  onChange={formik.handleChange}\r\n                  label=\"oldPassword\"\r\n                  inputProps={{}}\r\n                />\r\n                {formik.touched.oldPassword && formik.errors.oldPassword && (\r\n                  <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                    {formik.errors.oldPassword}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n              {/* <Box sx={{ mt: 2 }}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  name=\"password\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                          size=\"large\"\r\n                        >\r\n                          {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    )\r\n                  }}\r\n                  label=\"Password\"\r\n                  type={showPassword ? 'text' : 'password'}\r\n                />\r\n              </Box> */}\r\n            </Grid>\r\n            <Grid item xs={6} />\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth error={Boolean(formik.touched.newPassword && formik.errors.newPassword)}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">New Password</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  value={formik.values.newPassword}\r\n                  type={formik.values.showPassword ? 'text' : 'password'}\r\n                  name=\"newPassword\"\r\n                  onChange={formik.handleChange}\r\n                  label=\"newPassword\"\r\n                  inputProps={{}}\r\n                />\r\n                {formik.touched.newPassword && formik.errors.newPassword && (\r\n                  <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                    {formik.errors.newPassword}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <FormControl fullWidth error={Boolean(formik.touched.retypePassword && formik.errors.retypePassword)}>\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">Retype New Password</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-password\"\r\n                  value={formik.values.retypePassword}\r\n                  type={formik.values.showPassword ? 'text' : 'password'}\r\n                  name=\"retypePassword\"\r\n                  onChange={formik.handleChange}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        aria-label=\"toggle password visibility\"\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                        edge=\"end\"\r\n                        size=\"large\"\r\n                      >\r\n                        {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"retypePassword\"\r\n                  inputProps={{}}\r\n                />\r\n                {formik.touched.retypePassword && formik.errors.retypePassword && (\r\n                  <FormHelperText error id=\"standard-weight-helper-text-password-login\">\r\n                    {formik.errors.retypePassword}\r\n                  </FormHelperText>\r\n                )}\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container direction=\"row\" alignItems=\"flex-end\" justifyContent=\"flex-end\" spacing={gridSpacing} sx={{ mt: 2 }}>\r\n            <Grid item>\r\n              <Button size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\" onClick={handleClick}>\r\n                Change Password\r\n              </Button>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button size=\"large\" type=\"reset\" variant=\"outlined\" color=\"error\" onClick={(e) => formik.resetForm()}>\r\n                Clear\r\n              </Button>\r\n            </Grid>\r\n            <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                Change Password Successfully!\r\n              </Alert>\r\n            </Snackbar>\r\n          </Grid>\r\n        </form>\r\n      </MainCard>\r\n    </Paper>\r\n  );\r\n}\r\n","// THIRD-PARTY\r\nimport React from 'react';\r\nimport {\r\n  Paper,\r\n  Grid,\r\n  useTheme,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Switch,\r\n  Divider,\r\n  TextField,\r\n  Button,\r\n  Stack,\r\n  Snackbar,\r\n  FormGroup,\r\n  FormControlLabel\r\n} from '@mui/material';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport MuiAlert, { AlertProps } from '@mui/material/Alert';\r\n\r\n// PROJECT IMPORTS\r\nimport MainCard from 'ui-component/cards/MainCard';\r\nimport { gridSpacing } from 'store/constant';\r\n\r\nconst Alert = React.forwardRef<HTMLDivElement, AlertProps>((props, ref) => (\r\n  <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />\r\n));\r\n\r\nexport default function SettingPage() {\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [state, setState] = React.useState({\r\n    email: true,\r\n    desktop: false,\r\n    attempted: false\r\n  });\r\n  const [FacebookURL, setFacebookURL] = React.useState('');\r\n  const [LinkedInURL, setLinkedInURL] = React.useState('');\r\n  const [TwitterURL, setTwitterURL] = React.useState('');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: event.target.checked\r\n    });\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent | Event, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleFacebookURLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFacebookURL(event.target.value);\r\n  };\r\n  const handleFacebookConnect = () => {\r\n    console.log(FacebookURL);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleLinkedInURLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLinkedInURL(event.target.value);\r\n  };\r\n  const handleLinkedInConnect = () => {\r\n    console.log(LinkedInURL);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleTwitterURLChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setTwitterURL(event.target.value);\r\n  };\r\n  const handleTwitterConnect = () => {\r\n    console.log(TwitterURL);\r\n    setOpen(true);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <Grid container justifyContent=\"center\" spacing={gridSpacing}>\r\n        <Grid item xs={12}>\r\n          <MainCard>\r\n            <CardHeader\r\n              title=\"Notifications\"\r\n              subheader=\"Alway let you knows about important changes\"\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <Grid container justifyContent=\"center\" spacing={2}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Typography variant=\"h5\">Send Email Notifications</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={8}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch checked={state.email} onChange={handleChange} name=\"email\" inputProps={{ 'aria-label': 'controlled' }} />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid container justifyContent=\"center\" spacing={2} sx={{ mt: 0.25 }}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Typography variant=\"h5\">Notifications on your Desktop</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={8}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={state.desktop}\r\n                          onChange={handleChange}\r\n                          name=\"desktop\"\r\n                          inputProps={{ 'aria-label': 'controlled' }}\r\n                        />\r\n                      }\r\n                      label=\"Chrome Browser Notification\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n              <Divider />\r\n              <Grid container justifyContent=\"center\" spacing={2} sx={{ mt: 0.25 }}>\r\n                <Grid item xs={12} lg={4}>\r\n                  <Typography variant=\"h5\">Notify when login attempted from other place</Typography>\r\n                </Grid>\r\n                <Grid item xs={12} lg={8}>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={state.attempted}\r\n                          onChange={handleChange}\r\n                          name=\"attempted\"\r\n                          inputProps={{ 'aria-label': 'controlled' }}\r\n                        />\r\n                      }\r\n                      label=\"\"\r\n                    />\r\n                  </FormGroup>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <MainCard>\r\n            <CardHeader\r\n              title=\"Social Networks\"\r\n              subheader=\"Learn more\"\r\n              sx={{\r\n                borderBottom: '1px solid',\r\n                borderColor: theme.palette.mode === 'dark' ? theme.palette.background.default : theme.palette.primary[200] + 75,\r\n                ':hover': {\r\n                  boxShadow: theme.palette.mode === 'dark' ? '0 2px 14px 0 rgb(33 150 243 / 10%)' : '0 2px 14px 0 rgb(32 40 45 / 8%)'\r\n                }\r\n              }}\r\n            />\r\n            <CardContent>\r\n              <Grid\r\n                container\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignContent=\"center\"\r\n                alignItems=\"center\"\r\n                spacing={2}\r\n                sx={{ mt: 0.25 }}\r\n              >\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    <FacebookIcon fontSize=\"large\" />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"FacebookUrl\"\r\n                      label=\"Facebook Profile URL\"\r\n                      value={FacebookURL}\r\n                      onChange={handleFacebookURLChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleFacebookConnect}>\r\n                      Connect\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n                <Divider />\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    <LinkedInIcon fontSize=\"large\" />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"LinkedInUrl\"\r\n                      label=\"LinkedIn Profile URL\"\r\n                      value={LinkedInURL}\r\n                      onChange={handleLinkedInURLChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleLinkedInConnect}>\r\n                      Connect\r\n                    </Button>\r\n                  </Stack>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Stack direction=\"row\" spacing={2}>\r\n                    <TwitterIcon fontSize=\"large\" />\r\n                    <TextField\r\n                      margin=\"dense\"\r\n                      id=\"TwitterUrl\"\r\n                      label=\"Twitter Profile URL\"\r\n                      value={TwitterURL}\r\n                      onChange={handleTwitterURLChange}\r\n                      fullWidth\r\n                      variant=\"outlined\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleTwitterConnect}>\r\n                      Connect\r\n                    </Button>\r\n                  </Stack>\r\n                  <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\r\n                      Change Password Successfully!\r\n                    </Alert>\r\n                  </Snackbar>\r\n                </Grid>\r\n              </Grid>\r\n            </CardContent>\r\n          </MainCard>\r\n        </Grid>\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@mui/lab/TabContext';\r\nimport TabList from '@mui/lab/TabList';\r\nimport TabPanel from '@mui/lab/TabPanel';\r\nimport Profile from 'views/pages/account/tabs/Profile';\r\nimport ChangePassword from 'views/pages/account/tabs/ChangePassword';\r\nimport SettingPage from 'views/pages/account/tabs/SettingsPage';\r\nimport { Grid, Paper, CardContent } from '@mui/material';\r\n\r\nexport default function LabTabs() {\r\n  const [value, setValue] = React.useState('1');\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: string) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Paper elevation={0}>\r\n      <CardContent>\r\n        <Grid container spacing={2} sx={{ minHeight: '100vh' }}>\r\n          <Grid item xs={12}>\r\n            <TabContext value={value}>\r\n              <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <TabList onChange={handleChange} aria-label=\"lab API tabs example\">\r\n                  <Tab label=\"Profile\" value=\"1\" />\r\n                  <Tab label=\"Change Password\" value=\"2\" />\r\n                  <Tab label=\"Setings\" value=\"3\" />\r\n                </TabList>\r\n              </Box>\r\n              <TabPanel value=\"1\">\r\n                {' '}\r\n                <Profile />{' '}\r\n              </TabPanel>\r\n              <TabPanel value=\"2\">\r\n                {' '}\r\n                <ChangePassword />{' '}\r\n              </TabPanel>\r\n              <TabPanel value=\"3\">\r\n                {' '}\r\n                <SettingPage />{' '}\r\n              </TabPanel>\r\n            </TabContext>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Paper>\r\n  );\r\n}\r\n"],"sourceRoot":""}